const e={expanders:[class Button{beButton(e,t,s,i){this.addEventListener("click","Button.click"),this._set("buttonState",e),this._set("title",i),this.setButtonState(e,t,s,i)}beViewButton(e,t,s,i){this._set("label",t),this._set("class",s),this._set("buttonState",e),this._set("title",i),this.addViewCode("widgets.ButtonView")}beImmediateViewButton(e,t,s){this._set("immediateDomId",e),this._set("immediateTrait",t),this._set("immediateMethod",s)}enablePressHold(){this._set("presshold",!0)}setButtonState(e,t,s,i){if(this._set("label",t),this._set("class",s),this._set("buttonState",e),"string"==typeof i&&this._set("title",i),"string"==typeof(i=this._get("title"))&&this.style.setProperty("-cards-dom-title",i),t.startsWith("<svg")){let e=`<div style="display: flex" class="no-select ${s||""}">${t}</div>`;this.dom.innerHTML=e}else if(t.endsWith(".svg")){let e="./assets/icons/";this.innerHTML=`<div class="no-select ${s||""}" style="background-image: url(${e}${t});"></div>`}else if(t.endsWith(".svgIcon")){let e=`<div style="display: flex" class="no-select ${s||""}"><svg viewBox="0 0 24 24" class="icon-svg"><use href="#${"img-"+t.slice(0,t.length-".svgIcon".length)}"></use></svg></div>`;this.innerHTML=e}else this.innerHTML=`<span class="no-select ${s||""}">${t}</span>`}click(){this.publishToAll()}},class ButtonView{init(){this.addEventListener("click","ButtonView.click");let e=this.model;this.setButtonState(e._get("buttonState"),e._get("label"),e._get("class"),e._get("title")),this.model._get("presshold")&&this.enablePressHold()}setButtonState(e,t,s,i){if(t.startsWith("<svg")){let e=`<div style="display: flex" class="no-select ${s||""}">${t}</div>`;this.dom.innerHTML=e}else if(t.endsWith(".svg")){let e="./assets/icons/";this.dom.innerHTML=`<div class="no-select ${s||""}" style="background-image: url(${e}${t});"></div>`}else if(t.endsWith(".svgIcon")){let e=`<div style="display: flex" class="no-select ${s||""}"><svg viewBox="0 0 24 24" class="icon-svg"><use href="#${"img-"+t.slice(0,t.length-".svgIcon".length)}"></use></svg></div>`;this.dom.innerHTML=e}else this.dom.innerHTML=`<span class="no-select ${s||""}">${t}</span>`;this.dom.setAttribute("buttonState",e),"string"==typeof i&&(this.dom.title=i)}click(){if(!this.model._get("presshold")||!this.pressed)if(this.pressed=!1,this.model._get("immediateDomId")){let e=window.topView.querySelector(`#${this.model._get("immediateDomId")}`);if(e){let t=this.model._get("immediateTrait"),s=this.model._get("immediateMethod");e.call(t,s)}}else this.publishToAll()}getButtonState(){return this.dom.getAttribute("buttonState")}pressHold(){this.publishToAll(!0)}enablePressHold(){this.pressHoldDuration=1e3,this.startTime=Number.MAX_VALUE,this.pressHoldEvent=new CustomEvent("pressHold"),this.pressingDownHandler=e=>this.pressingDown(e),this.notPressingDownHandler=e=>this.notPressingDown(e),this.dom.addEventListener("pointerdown",this.pressingDownHandler),this.dom.addEventListener("pointerup",this.notPressingDownHandler),this.dom.addEventListener("pointercancel",this.notPressingDownHandler),this.dom.addEventListener("pointerleave",this.notPressingDownHandler),this.dom.addEventListener("pressHold",(e=>this.pressHold(e)))}pressingDown(e){requestAnimationFrame((()=>this.timer())),this.startTime=Date.now(),e.preventDefault(),this.pressed=!1}notPressingDown(e){cancelAnimationFrame(this.timerID),this.startTime=Number.MAX_VALUE}timer(){Date.now()-this.startTime<this.pressHoldDuration?this.timerID=requestAnimationFrame((()=>this.timer())):(this.held=!0,this.dom.dispatchEvent(this.pressHoldEvent))}},class CheckBox{init(){this.style.setProperty("background-color","white"),this.addEventListener("click","CheckBox.check")}check(){let e="black"===this.style.getProperty("background-color");return this.style.setProperty("background-color",e?"white":"black"),this.publishToAll(!e),!e}value(){return"black"===this.style.getProperty("background-color")}},class Tab{init(){this.subscribe(this.id,"clicked","Tab.click"),this.style.setProperty("margin-left","auto"),this.style.setProperty("background-color","#f8ffff")}click(e){this.getChildNodes().forEach((t=>{t.style.setProperty("border-bottom",t.domId===e?"2px solid blue":"0px")})),this.publishToAll(e)}beTab(e){let t={};if(e.forEach((e=>{e&&(t[e]=e)})),Object.keys(t).length!==e.length)throw Error("ids of elems are not unique");this.domId="owner",this.style.setProperty("display","flex"),e.forEach((e=>{let t=this.createElement();t.domId=e,t.innerHTML=e,t.classList.add("no-select"),t.style.setProperty("width","fit-content"),t.style.setProperty("margin","4px"),t.addEventListener("click","TabElement.click"),t._set("tab",this.id),t.setCode('\nclass TabElement {\n    click(evt) {\n      this.publish(this._get("tab"), "clicked", this.domId);\n    }\n}'),this.appendChild(t)}))}},class WheelFilterView{init(){this.addEventListener("wheel","WheelFilterView.wheel")}wheel(e){e.preventDefault()}},class GestureFilterView{init(){this.addEventListener("gesturestart","GestureFilterView.gesture"),this.addEventListener("gesturechange","GestureFilterView.gesture"),this.addEventListener("gestureend","GestureFilterView.gesture")}gesture(e){e.preventDefault()}},class PointerDownFilterView{init(){this.addEventListener("pointerdown","PointerDownFilterView.pointerDown")}pointerDown(e){e.preventDefault(),e.stopPropagation()}},class DoubleClickFilterView{init(){this.addEventListener("dblclick","DoubleClickFilterView.dblClick")}dblClick(e){e.preventDefault(),e.stopPropagation()}}],classes:[class DOMMenu{makeMenuItem(e,t,s,i,l,n){let r=document.createElement("div");if(null===s)return r.classList.add("no-select"),r.classList.add(t+"-title"),r.innerHTML=`<span>${i}</span>`,r;let o="";if(e&&!e.trim().startsWith("<svg")){o=`<div class="${t}-icon"><svg viewBox="0 0 24 24" class="${t}-icon-svg"><use href="#${"img-"+e}"></use></svg></div>`}else e&&e.trim().startsWith("<svg")&&(o=`<div class="${t}-icon">${e}</div>`);return o+=`<span class="${t}-label">${i}</span>`,r.innerHTML=o,r.classList.add(`${t}-item`),r.value=s,n?r.addEventListener("click",(e=>n.call(l,e)),!0):r.addEventListener("click",(e=>console.log(e)),!0),r}makeMenu(e,t,s,i,l){let n=document.createElement("div");return n.classList.add(t,"no-select"),s.forEach((({value:e,label:s,asset:r})=>{let o=this.makeMenuItem(r,t,e,s,i,l);n.appendChild(o)})),e.classList.add(`${t}-holder`),e.appendChild(n),e}}]};export{e as widgets};
