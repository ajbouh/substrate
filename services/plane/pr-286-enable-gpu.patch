From 4c0af48f165f0a7e2ad7e3359328c70bdd12acfb Mon Sep 17 00:00:00 2001
From: Paul Butler <paul@driftingin.space>
Date: Tue, 13 Dec 2022 18:59:02 +0000
Subject: [PATCH] Initial GPU support

---
 drone/src/agent/engines/docker/mod.rs | 15 ++++++++++++++-
 drone/src/config.rs                   |  3 +++
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/drone/src/agent/engines/docker/mod.rs b/drone/src/agent/engines/docker/mod.rs
index 9908a79d..fc9394ce 100644
--- a/drone/src/agent/engines/docker/mod.rs
+++ b/drone/src/agent/engines/docker/mod.rs
@@ -20,7 +20,7 @@ use bollard::{
     image::CreateImageOptions,
     models::{HostConfig, ResourcesUlimits},
     system::EventsOptions,
-    Docker, API_DEFAULT_VERSION,
+    Docker, API_DEFAULT_VERSION, service::DeviceRequest,
 };
 use plane_core::{
     messages::agent::{
@@ -46,6 +46,7 @@ pub struct DockerInterface {
     docker: Docker,
     runtime: Option<String>,
     network: Option<String>,
+    gpu: bool,
 }
 
 impl DockerInterface {
@@ -67,6 +68,7 @@ impl DockerInterface {
             docker,
             runtime: config.runtime.clone(),
             network: config.network.clone(),
+            gpu: config.insecure_gpu,
         })
     }
 
@@ -176,6 +178,16 @@ impl DockerInterface {
             .map(|(k, v)| format!("{}={}", k, v))
             .collect();
 
+        let device_requests = if self.gpu {
+            Some(vec![DeviceRequest {
+                count: Some(-1),
+                capabilities: Some(vec![vec!["gpu".to_string()]]),
+                ..Default::default()
+            }])
+        } else {
+            None
+        };
+
         // Build the container.
         let container_id = {
             let timer = Timer::new();
@@ -224,6 +236,7 @@ impl DockerInterface {
                             }]
                         },
                     ),
+                    device_requests,
                     ..HostConfig::default()
                 }),
                 ..Config::default()
diff --git a/drone/src/config.rs b/drone/src/config.rs
index ab408db9..5b4204a4 100644
--- a/drone/src/config.rs
+++ b/drone/src/config.rs
@@ -36,6 +36,9 @@ pub struct DockerConfig {
     pub connection: DockerConnection,
 
     pub network: Option<String>,
+
+    #[serde(default)]
+    pub insecure_gpu: bool,
 }
 
 #[derive(Serialize, Deserialize)]
